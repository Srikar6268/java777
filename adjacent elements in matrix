'''Given a matrix A of size N * M which contains 'x' or '.' only, and two numbers X & Y, your task is to determine whether all neighbors of the given cell are 'x' or not.

Input Format

First line consists of N and M.
Next N lines contains M elements per line with space separation.
Next line consists of X and Y, which denotes a cell position in A. Here, X represents the row number and Y represents the column number.
Constraints

1 <= N,M <= 100
Output Format

Output a line with YES or NO.

Sample Input 0

3 3
xxx
x.x
xxx
2 2
Sample Output 0

YES
Sample Input 1

3 3
xxx
xxx
xx.
2 2
Sample Output 1

NO'''


def get_adjacent_elements(matrix, row, col):
    adl = []
    nor = len(matrix[0])-1
    noc = len(matrix)-1

    if col > 0:
        adl.append(matrix[row][col - 1])
    if col < noc:
        adl.append(matrix[row][col + 1])
    if row > 0:
        adl.append(matrix[row - 1][col])
    if row < nor:
        adl.append(matrix[row + 1][col])
    if row > 0 and col > 0:
        adl.append(matrix[row - 1][col - 1])
    if row > 0 and col < noc - 1:
        adl.append(matrix[row - 1][col + 1])
    if row < nor and col > 0:
        adl.append(matrix[row + 1][col - 1])
    if row < nor and col < noc :
        adl.append(matrix[row + 1][col + 1])

    return adl

n, m = map(int, input().split())
matrix = []
for _ in range(n):
    row = input().split()[:m]  
    matrix.append(row)
x, y = map(int, input().split())
if 1<=x<=n-1 and 1<=y<=m-1:
    ele = get_adjacent_elements(matrix, x, y)
if "." in ele:
    print('NO')
else :
    print("YES")
